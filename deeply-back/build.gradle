// 1. queryDsl version 정보 추가
buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'java'
    /* 10-2. querydsl plugin 추가 */
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}
//ext {
//    snippetsDir = file('build/generated-snippets')
//}
//asciidoctor {
//    dependsOn test
//    inputs.dir snippetsDir
//}
//
//asciidoctor.doFirst {
//    delete file('src/main/resources/static/docs')
//}
//
//bootJar {
//    dependsOn asciidoctor
//    copy {
//        from "${asciidoctor.outputDir}"
//        into 'BOOT-INF/classes/static/docs'
//    }
//}

jar {
    enabled = false
}

//
//task copyDocument(type: Copy) {
//    dependsOn asciidoctor
//    from file("build/docs/asciidoc")
//    into file("src/main/resources/static/docs")
//}

group = 'com.server'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
//build {
//    dependsOn copyDocument
//}

repositories {
    mavenCentral()
}

dependencies {

    // spring-boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.jetbrains:annotations:23.0.0'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
//    testImplementation 'org.springframework.security:spring-security-test'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // gavlyukovskiy
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.1'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    // spring-test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'

    // h2
    runtimeOnly 'com.h2database:h2'

    // querydsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    implementation group: 'com.google.guava', name: 'guava', version: '30.0-android'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.6'

    // model mapper
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.1.1'


    // swagger dependency
    // implementation "io.springfox:springfox-boot-starter:3.0.0"
    // implementation "io.springfox:springfox-swagger-ui:3.0.0"

    // h2
    testImplementation 'com.h2database:h2:1.4.199'

    // REST Docs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    // Gson
    implementation 'com.google.code.gson:gson:2.10'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation group: 'it.ozimov', name: 'embedded-redis', version: '0.7.2'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.2'

    // liquibase
//    implementation 'org.liquibase:liquibase-core'

    // smtp
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // fcm
    implementation 'com.google.firebase:firebase-admin:7.1.1'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.0.0'

    // elasticsearch
//    implementation 'org.springframework.data:spring-data-elasticsearch'

    // oauth 2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    /* kafka */
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.kafka:spring-kafka-test'

    // websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'



}


/*
 * queryDSL 설정 추가
 */
// querydsl에서 사용할 경로 설정
def querydslDir = "$buildDir/generated/querydsl"
// JPA 사용 여부와 사용할 경로를 설정
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
// build 시 사용할 sourceSet 추가
sourceSets {
    main.java.srcDir querydslDir
}
// querydsl 컴파일시 사용할 옵션 설정
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
// querydsl 이 compileClassPath 를 상속하도록 설정
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}


